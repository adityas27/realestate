# Generated by Django 5.0 on 2024-06-11 18:35

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ImportantFigures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.IntegerField()),
                ('lot_area', models.IntegerField(blank=True, null=True)),
                ('no_of_floors', models.IntegerField(null=True)),
                ('ground_to_floor', models.IntegerField(help_text='in ft')),
                ('beds', models.IntegerField()),
                ('baths', models.IntegerField()),
                ('garage', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_1', models.CharField(default='', help_text='Flat No. and building no./House no. etc..', max_length=255)),
                ('address_2', models.CharField(default='', help_text='Building name/society name/etc....', max_length=255)),
                ('address_3', models.CharField(default='', help_text='Road name/Locality and landmark.. etc...', max_length=255)),
                ('address_4', models.CharField(default='', help_text='Town name/city name-district name-state name', max_length=255)),
                ('pincode', models.IntegerField(default=0, help_text='Pincode for eg: 400001 for mumbai')),
                ('city', models.CharField(help_text='CITY', max_length=255)),
                ('state', models.CharField(help_text='STATE', max_length=255)),
                ('nation', models.CharField(help_text='NATION', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('price', models.IntegerField()),
                ('year_built', models.IntegerField()),
                ('furnished', models.BooleanField(default=False, help_text='Wether or not property is furnished')),
                ('prop_type', models.CharField(choices=[('flat', 'Apartment/Flat'), ('house', 'Single Family House'), ('condonium', 'Condonium'), ('bungalow', 'Bungalow')], max_length=10)),
                ('own_type', models.CharField(choices=[('rent', 'Rent'), ('buy', 'Buy')], default='buy', max_length=10)),
                ('desc', models.TextField(default='')),
                ('visits', models.IntegerField(default=0, help_text='number of visits this week')),
                ('hidden', models.BooleanField(default=False, help_text='If you want to hide a specific listing')),
                ('thumbnail', models.ImageField(help_text='Thumbnail image', null=True, upload_to='property_images')),
                ('dimensions', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='listing.importantfigures')),
                ('location', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='listing.location')),
            ],
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('id', models.IntegerField(editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='property_image')),
                ('date_time', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('for_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listing.property')),
            ],
        ),
    ]
